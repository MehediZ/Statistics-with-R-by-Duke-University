library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
#load("movies.Rdata")
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
#load("movies.Rdata")
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
#load("movies.Rdata")
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
load("movies.Rdata")
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar_win = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
pA <- ggplot(data = mv, aes(x = feature_film)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = drama)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5)
pC <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
grid.arrange(pA, pB, pC, nrow = 1, ncol = 3)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
pA <- ggplot(data = mv, aes(x = feature_film)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = drama)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5)
pC <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
grid.arrange(pA, pB, pC, nrow = 1, ncol = 3)
View(mv)
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
ggplot(data=mv,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
?gather
mv_cat <- mv %>% select(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box)
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
?gather
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
?gather
mv_cat <- mv %>% gather('attribute','show',feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box)
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
mv_cat <- mv %>% gather('attribute','show', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','show', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
mv_cat <- mv %>% gather('attribute','show', feature_film:top200_box))
mv_cat <- mv %>% gather('attribute','show', feature_film:top200_box)
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','show', (feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
mv_cat <- mv %>% gather('attribute','show', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot()
mv_cat <- mv %>% gather('attribute','show', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot() + flip()
mv_cat <- mv %>% gather('attribute','show', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=show))+geom_boxplot() + coord_flip()
mv_cat <- mv %>% gather('attribute','Yes/No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes/No))+geom_boxplot() + coord_flip()
mv_cat <- mv %>% gather('attribute','Yes or No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes or No))+geom_boxplot() + coord_flip()
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
grid.arrange(pA, pB, pC, pD, nrow = 2, ncol = 2)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = 10)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 10)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 10)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 10)
grid.arrange(pA, pB, pC, pD, nrow = 2, ncol = 2)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = 5)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
grid.arrange(pA, pB, pC, pD, nrow = 2, ncol = 2)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .5)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 20)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2)
pD <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2)
grid.arrange(pA, pB, pC, pD, nrow = 2, ncol = 2)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 200)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 1)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2)
grid.arrange(pA, pB, pC, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 1)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 5)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 5)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "red", binwidth = 5)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 5)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 5)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 5)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 2)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = new.movies, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_2 <- bayes_inference(y = audience_score, x = drama, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_2 <- bayes_inference(y = audience_score, x = drama, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_3 <- bayes_inference(y = audience_score, x = mpaa_rating_R, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_4 <- bayes_inference(y = audience_score, x = oscar_season, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_1
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(MASS)
lm1 <- lm(audience_score ~ . - audience_score, data = mv)
score_step <- stepAIC(lm1, trace = FALSE)
score_step$anova
bma1 <- bas.lm(audience_score ~ . - audience_score, data = mv,
prior = "BIC",
modelprior = uniform())
bma1
image(bma1,rotate=FALSE)
par(mfrow=c(2,2))
plot(bma1, which=c(1, 2), ask=FALSE)
plot(bma1, which=4, ask=FALSE, cex.lab=0.5)
Deadpool <- data.frame(runtime=108,
thtr_rel_year=2016,
imdb_rating=8.1,
imdb_num_votes=500049,
critics_score=84,
audience_score=0,
best_pic_nom=factor("no", levels=c("no", "yes")),
best_pic_win=factor("no", levels=c("no", "yes")),
best_actor_win=factor("no", levels=c("no", "yes")),
best_actress_win=factor("no", levels=c("no", "yes")),
best_dir_win=factor("no", levels=c("no", "yes")),
top200_box=factor("no", levels=c("no", "yes")),
feature_film=factor("yes", levels=c("no", "yes")),
drama=factor("no", levels=c("no", "yes")),
mpaa_rating_R=factor("yes", levels=c("no", "yes")),
oscar_season=factor("no", levels=c("no", "yes")),
summer_season=factor("no", levels=c("no", "yes")))
BMA_DP <- predict(bma1, newdata=Deadpool, estimator="BMA", se.fit=TRUE)
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(MASS)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(MASS)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(MASS)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(MASS)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 2)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_2 <- bayes_inference(y = audience_score, x = drama, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_3 <- bayes_inference(y = audience_score, x = mpaa_rating_R, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_4 <- bayes_inference(y = audience_score, x = oscar_season, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 2)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(gridExtra)
library(tidyr)
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film=as.factor(ifelse(title_type == 'Feature Film', 'yes', 'no'))) %>%
mutate(drama=as.factor(ifelse(genre == 'Drama', 'yes', 'no'))) %>%
mutate(mpaa_rating_R=as.factor(ifelse(mpaa_rating == 'R', 'yes', 'no'))) %>%
mutate(oscar_season=as.factor(ifelse(thtr_rel_month %in% c(10:12), 'yes', 'no'))) %>%
mutate(summer_season=as.factor(ifelse(thtr_rel_month %in% c(5:8), 'yes', 'no')))
mv <- movies %>% select(audience_score, feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box)
mv <- na.exclude(mv)
mv <- mutate(mv, oscar = ifelse(best_pic_nom == "yes", "yes", ifelse(best_pic_win == "yes", "yes",  ifelse(best_actor_win == "yes", "yes", ifelse(best_actress_win == "yes", "yes", ifelse(best_dir_win == "yes", "yes", "no"))))))
mv_cat <- mv %>% gather('attribute','Yes_or_No', c(feature_film, drama, mpaa_rating_R, oscar_season, summer_season, oscar, top200_box))
ggplot(data=mv_cat,aes(x=attribute, y= audience_score,fill=Yes_or_No))+geom_boxplot() + coord_flip()
pA <- ggplot(data = mv, aes(x = runtime)) + geom_histogram(colour = "black", fill = "green", binwidth = .5)
pB <- ggplot(data = mv, aes(x = imdb_rating)) + geom_histogram(colour = "black", fill = "cyan", binwidth = .2)
pC <- ggplot(data = mv, aes(x = imdb_num_votes)) + geom_histogram(colour = "black", fill = "yellow", binwidth = 2000)
pD <- ggplot(data = mv, aes(x = critics_score)) + geom_histogram(colour = "black", fill = "orange", binwidth = 2)
pE <- ggplot(data = mv, aes(x = audience_score)) + geom_histogram(colour = "black", fill = "magenta", binwidth = 2)
grid.arrange(pA, pB, pC, pD, pE, nrow = 2, ncol = 3)
BI_1 <- bayes_inference(y = audience_score, x = feature_film, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_2 <- bayes_inference(y = audience_score, x = drama, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_3 <- bayes_inference(y = audience_score, x = mpaa_rating_R, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
BI_4 <- bayes_inference(y = audience_score, x = oscar_season, data = mv, statistic = "mean", type = "ht", null = 0, alternative = "twosided")
library(MASS)
lm1 <- lm(audience_score ~ . - audience_score, data = mv)
score_step <- stepAIC(lm1, trace = FALSE)
score_step$anova
bma1 <- bas.lm(audience_score ~ . - audience_score, data = mv,
prior = "BIC",
modelprior = uniform())
bma1
summary(bma1)
image(bma1,rotate=FALSE)
par(mfrow=c(2,2))
plot(bma1, which=c(1, 2), ask=FALSE)
plot(bma1, which=4, ask=FALSE, cex.lab=0.5)
Deadpool <- data.frame(runtime=108,
thtr_rel_year=2016,
imdb_rating=8.1,
imdb_num_votes=500049,
critics_score=84,
audience_score=0,
best_pic_nom=factor("no", levels=c("no", "yes")),
best_pic_win=factor("no", levels=c("no", "yes")),
best_actor_win=factor("no", levels=c("no", "yes")),
best_actress_win=factor("no", levels=c("no", "yes")),
best_dir_win=factor("no", levels=c("no", "yes")),
top200_box=factor("no", levels=c("no", "yes")),
feature_film=factor("yes", levels=c("no", "yes")),
drama=factor("no", levels=c("no", "yes")),
mpaa_rating_R=factor("yes", levels=c("no", "yes")),
oscar_season=factor("no", levels=c("no", "yes")),
summer_season=factor("no", levels=c("no", "yes")),
oscar = factor("no", levels=c("no", "yes")))
BMA_DP <- predict(bma1, newdata=Deadpool, estimator="BMA", se.fit=TRUE)
# Calculate 95% margin of error for the prediction interval.
BMA_DP_pred <- qt(0.95, df=BMA_DP$se.bma.pred[1]) *
mean(BMA_DP$se.bma.pred)
# Show prediction results.
df <- data.frame(t="Deadpool",
p=sprintf("%2.1f", BMA_DP$Ybma),
i=sprintf("%2.1f - %2.1f", BMA_DP$Ybma - BMA_DP_pred,
BMA_DP$Ybma + BMA_DP_pred),
r=84)
colnames(df) <- c("Movie Title", "Predicted Rating", "95% Prediction Interval",
"Actual Rating")
print(df)
