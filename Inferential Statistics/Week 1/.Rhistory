library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
dim(ames)
data(ames)
data(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram(binwidth = 250)
ames %>%
summarise(mu = mean(area), pop_med = median(area),
sigma = sd(area), pop_iqr = IQR(area),
pop_min = min(area), pop_max = max(area),
pop_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
pop_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
1742.75-1126
samp1 <- ames %>%
sample_n(size = 50)
samp1 <- ames %>%
sample_n(size = 50)
# Chunk 1: load-packages
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
# Chunk 2: load-data
data(ames)
# Chunk 3: area-hist
ggplot(data = ames, aes(x = area)) +
geom_histogram(binwidth = 250)
# Chunk 4: area-stats
ames %>%
summarise(mu = mean(area), pop_med = median(area),
sigma = sd(area), pop_iqr = IQR(area),
pop_min = min(area), pop_max = max(area),
pop_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
pop_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
# Chunk 5: samp1
samp1 <- ames %>%
sample_n(size = 50)
samp1 %>%
summarise(x_bar = mean(area))
# type your code for the Exercise here, and Run Document
ggplot(data = sampl1, aes(x = area)) + geom_histogram(binwidth = 250)
# type your code for the Exercise here, and Run Document
ggplot(data = samp1, aes(x = area)) + geom_histogram(binwidth = 250)
samp1 %>%
summarise(x_bar = mean(area))
ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
sample_means50 %>% summarise(Obs_sm50 = n() )
# type your code for the Exercise here, and Run Document
sample_means50 %>% summarise(Obs_sm50 = n() )
# type your code for the Exercise here, and Run Document
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean() )
View(sample_means50)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 250)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 50)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 20)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 1)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 2)
sample_means50 %>% summarise(Obs_sm50 = n(), mean_sm50 = mean(x_bar) )
ggplot(data = sample_means50, aes(x = x_bar)) + geom_histogram(binwidth = 5)
# type your code for the Exercise here, and Run Document
sample_means_small = rep
sample_means_small <- ames %>% rep_sample_n(size = 10, reps = 25, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means_small, aes(x = x_bar)) +
geom_histogram(binwidth = 2)
# type your code for the Exercise here, and Run Document
sample_means_small = rep
sample_means_small <- ames %>% rep_sample_n(size = 10, reps = 25, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means_small, aes(x = x_bar)) +
geom_histogram(binwidth = 2)
# type your code for the Exercise here, and Run Document
sample_means_small = rep
sample_means_small <- ames %>% rep_sample_n(size = 10, reps = 25, replace = TRUE) %>%
summarise(x_bar_sms = mean(area))
ggplot(data = sample_means_small, aes(x = x_bar_sms)) +
geom_histogram(binwidth = 2)
# type your code for the Exercise here, and Run Document
sample_means_small = rep
sample_means_small <- ames %>% rep_sample_n(size = 10, reps = 25, replace = TRUE) %>%
summarise(x_bar_sms = mean(area))
ggplot(data = sample_means_small, aes(x = x_bar_sms)) +
geom_histogram(binwidth = 2)
# type your code for Question 3 here, and Run Document
sample_means_small %>% summarise(n())
sample_means_small %>% summarise(n())
shinyApp(
ui <- fluidPage(
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput("selected_var",
"Variable:",
choices = list("area", "price"),
selected = "area"),
numericInput("n_samp",
"Sample size:",
min = 1,
max = nrow(ames),
value = 30),
numericInput("n_sim",
"Number of samples:",
min = 1,
max = 30000,
value = 15000)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("sampling_plot"),
verbatimTextOutput("sampling_mean"),
verbatimTextOutput("sampling_se")
)
)
),
# Define server logic required to draw a histogram
server <- function(input, output) {
# create sampling distribution
sampling_dist <- reactive({
ames[[input$selected_var]] %>%
sample(size = input$n_samp * input$n_sim, replace = TRUE) %>%
matrix(ncol = input$n_samp) %>%
rowMeans() %>%
data.frame(x_bar = .)
#ames %>%
#  rep_sample_n(size = input$n_samp, reps = input$n_sim, replace = TRUE) %>%
#  summarise_(x_bar = mean(input$selected_var))
})
# plot sampling distribution
output$sampling_plot <- renderPlot({
x_min <- quantile(ames[[input$selected_var]], 0.1)
x_max <- quantile(ames[[input$selected_var]], 0.9)
ggplot(sampling_dist(), aes(x = x_bar)) +
geom_histogram() +
xlim(x_min, x_max) +
ylim(0, input$n_sim * 0.35) +
ggtitle(paste0("Sampling distribution of mean ",
input$selected_var, " (n = ", input$n_samp, ")")) +
xlab(paste("mean", input$selected_var)) +
theme(plot.title = element_text(face = "bold", size = 16))
})
# mean of sampling distribution
output$sampling_mean <- renderText({
paste0("mean of sampling distribution = ", round(mean(sampling_dist()$x_bar), 2))
})
# mean of sampling distribution
output$sampling_se <- renderText({
paste0("SE of sampling distribution = ", round(sd(sampling_dist()$x_bar), 2))
})
},
options = list(height = 500)
)
ames %>% sample_n(50) %>% summarise(mean(price))
ames %>% sample_n(50) %>% summarise(mean(price))
ames %>% sample_n(50) %>% summarise(mean(price))
ames %>% sample_n(50) %>% summarise(mean(price))
sample_means50 <- ames %>% rep_sample_n(size = 50, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means50, aes(x = barx_price)) +
geom_histogram(binwidth = 2)
sample_means50 <- ames %>% rep_sample_n(size = 50, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means50, aes(x = barx_price)) +
geom_histogram(binwidth = 20)
sample_means50 <- ames %>% rep_sample_n(size = 50, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means50, aes(x = barx_price)) +
geom_histogram(binwidth = 50)
sample_means50 <- ames %>% rep_sample_n(size = 50, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means50, aes(x = barx_price)) +
geom_histogram(binwidth = 250)
sample_means150 <- ames %>% rep_sample_n(size = 150, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means150, aes(x = barx_price)) +
geom_histogram(binwidth = 250)
ames %>% sample_n(15) %>% summarise(mean(price))
sample_means15 <- ames %>% rep_sample_n(size = 15, reps = 2000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means150, aes(x = barx_price)) +
geom_histogram(binwidth = 150)
sample_means150 <- ames %>% rep_sample_n(size = 150, reps = 5000, replace = TRUE) %>%
summarise(barx_price = mean(price))
ggplot(data = sample_means150, aes(x = barx_price)) +
geom_histogram(binwidth = 250)
9.4/sqrt(507)
