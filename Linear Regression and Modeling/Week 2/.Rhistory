library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(mlb11)
ggplot(data = mb11, aes(x = at_bats, y = runs)) + geom_point(shape = 1)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 1)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 2)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 0)
?geom_point
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 3)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 4)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 5)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 6)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 7)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 8)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 1)
mlb11 %>%
summarise(cor(runs, at_bats))
library(statsr)
library(dplyr)
library(ggplot2)
data(mlb11)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) + geom_point(shape = 1)
mlb11 %>%
summarise(cor(runs, at_bats))
plot_ss(x = at_bats, y = runs, data = mlb11)
?plot_ss
plot_ss(x = at_bats, y = runs, data = mlb11)
plot_ss(x = at_bats, y = runs, data = mlb11)
plot_ss(x = at_bats, y = runs, data = mlb11, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
summary(m(runs ~ homeruns, data = mlb11))
summary(lm(runs ~ homeruns, data = mlb11))
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
?lm
mlb11 %>%
filter(at_bats == 5579) %>%
select(runs)
view(ml)
view(m1)
View(mlb11)
View(m1)
typeof(m1)
m1$coefficients
type_of(m1$coefficients)
typeof(m1$coefficients)
m1$coefficients[1]
m1$coefficients
attributes(m1$coefficients)
m1$coefficients["at_bats"]
m1$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
predicted_runs = lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]*5579 + lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
predicted_runs <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]*5579 + lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
predicted_runs <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]*5579 + lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
predicted_runs <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]*5579 + lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
predicted_runs <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]*5579 + lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
regCoeff <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]
typeof(lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"])
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
regCoeff <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]
regCoeff*5579
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
regCoeff <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]
regIntercept <- lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
regCoeff <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]
regIntercept <- lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
predicted_runs <- regCoeff*5579 + regIntercept
residual <- actual_runs - predicted_runs
actual_runs <- mlb11 %>%  filter(at_bats == 5579) %>%  select(runs)
regCoeff <- lm(runs ~ at_bats, data = mlb11)$coefficients["at_bats"]
regIntercept <- lm(runs ~ at_bats, data = mlb11)$coefficients["(Intercept)"]
predicted_runs <- regCoeff*5579 + regIntercept
actual_runs - predicted_runs
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25) +
xlab("Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
ggplot(data = mlb11, aes(x = homeruns, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
# type your code for the Exercise here, and Knit
summary(lm( runs ~ homeruns, mlb11))
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ at_bats, mlb11)
ggplot(data = mlb11, aes(x = hits, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ hits, mlb11)
ggplot(data = mlb11, aes(x = wins, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ wins, mlb11)
ggplot(data = mlb11, aes(x = batting_average, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
View(mlb11)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ at_bats, mlb11)
ggplot(data = mlb11, aes(x = hits, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ hits, mlb11)
ggplot(data = mlb11, aes(x = wins, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ wins, mlb11)
ggplot(data = mlb11, aes(x = bat_avg, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
lm( runs ~ bat_avg, mlb11)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
summary(lm( runs ~ at_bats, mlb11))
ggplot(data = mlb11, aes(x = hits, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
summary(lm( runs ~ hits, mlb11))
ggplot(data = mlb11, aes(x = wins, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
summary(lm( runs ~ wins, mlb11))
ggplot(data = mlb11, aes(x = bat_avg, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
summary(lm( runs ~ bat_avg, mlb11))
ggplot(data = mlb11, aes(x = new_obs, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
ggplot(data = mlb11, aes(x = new_slug, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
ggplot(data = mlb11, aes(x = new_onbase, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
summary(lm( runs ~ new_obs, mlb11))
