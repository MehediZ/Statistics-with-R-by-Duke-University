load("ames_train.Rdata")
library(MASS)
library(dplyr)
library(ggplot2)
library(devtools)
library(statsr)
ames_train <- ames_train %>%
mutate(age = 2017 - Year.Built)
ggplot(ames_train, aes(x=age), labs(title = "Distribution of House Age", y = "Number of Houses", x = "Age of the House in 2017")) + geom_histogram(bins=30, fill = 'Magenta')
summary(ames_train$age)
ames_train <- ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price))
load("ames_train.Rdata")
library(MASS)
library(dplyr)
library(ggplot2)
library(devtools)
library(statsr)
ames_train <- ames_train %>%
mutate(age = 2017 - Year.Built)
ggplot(ames_train, aes(x=age), labs(title = "Distribution of House Age", y = "Number of Houses", x = "Age of the House in 2017")) + geom_histogram(bins=30, fill = 'Magenta')
summary(ames_train$age)
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price))
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = log(price), x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
?ggplot
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
?reorder
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, FUN = median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, which = 1)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, which = 2)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, which = 3)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, which = 4)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
?which
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train %>% which(2)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[2]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[][2]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[2][2]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[741,]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[c(206,428,741),]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[c(206,428,741),]
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[c(206,428,741),]$Condition.1
model_lm <- lm(log(price) ~ log(area), data = ames_train)
plot(model_lm, 1)
ames_train[c(206,428,741),]
apply(ames_train, 2, function(x) sum(is.na(x))) %>% sort %>% tail
?pply
?apply
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(fit_lm)
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm)
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm)
model_bic = bas.lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
load("ames_train.Rdata")
library(MASS)
library(dplyr)
library(ggplot2)
library(devtools)
library(statsr)
ames_train <- ames_train %>%
mutate(age = 2017 - Year.Built)
ggplot(ames_train, aes(x=age), labs(title = "Distribution of House Age", y = "Number of Houses", x = "Age of the House in 2017")) + geom_histogram(bins=30, fill = 'Magenta')
summary(ames_train$age)
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, FUN = median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
apply(ames_train, 2, function(x) sum(is.na(x))) %>% sort %>% tail
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm)
model_bic = bas.lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
load("ames_train.Rdata")
library(MASS)
library(BAS)
library(dplyr)
library(ggplot2)
library(devtools)
library(statsr)
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm)
model_bic = bas.lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
summary(model_bic)
plot(model_bic)
plot(model_lm)
plot(model_lm)
which(model_lm$res_sqr==max(model_lm$res_sqr))
plot(model_lm)
which(model_lm$res_sqr == max((model_lm$res_sqr)^2))
plot(model_lm)
which(model_lm$residuals == max((model_lm$residuals)^2))
plot(model_lm)
which(model_lm$residuals^2 == max((model_lm$residuals)^2))
plot(model_lm)
test <- which(model_lm$residuals^2 == max((model_lm$residuals)^2))
plot(model_lm)
test <- which(model_lm$residuals^2 == max((model_lm$residuals)^2))
test
plot(model_lm)
ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
model_lm(outlierHouse)
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
predict(model_lm, outlierHouse)
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
model_lm$fitted.values[which(model_lm$residuals^2 == max((model_lm$residuals)^2))]
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
exp(model_lm$fitted.values[which(model_lm$residuals^2 == max((model_lm$residuals)^2))])
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
predictedPrice <- exp(model_lm$fitted.values[which(model_lm$residuals^2 == max((model_lm$residuals)^2))])
predictedPrice
?print
model_bic = bas.lm(log(price) ~ log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
summary(model_bic)
?train
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_1 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_1 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
?predict
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_price <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train )
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice, predict_model_1, predict_model_2)
View(plotDataFrame)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice, predict_model_1, predict_model_2)
plot_dat = data.frame(log_ActualPrice =log_ActualPrice, pred = c(predict_model_1, predict_model_2), prediction=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), diff=pred1-pred2)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice, predict_model_1, predict_model_2)
plot_dat = data.frame(log_ActualPrice =log_ActualPrice, pred = c(predict_model_1, predict_model_2), prediction=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), diff=predict_model_1-predict_model_2)
View(plot_dat)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)))
ggplot(data=plotDataFrame, aes(x = log_ActualPrice, y = PredictedPrice, color = predictionType)) +
geom_point() +
geom_abline(slope=1, intercept=0) +
labs(title = "Predicted log(Price) vs Actual log(Price) for Both Models", y = "Predicted log(Price)", x = "Actual log(Price)")
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)))
ggplot(data=plotDataFrame, aes(x = log_ActualPrice, y = PredictedPrice, color = predictionType)) +
geom_point(, alpha = 0.5) +
geom_abline(slope=1, intercept=0) +
labs(title = "Predicted log(Price) vs Actual log(Price) for Both Models", y = "Predicted log(Price)", x = "Actual log(Price)")
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), difference = log_ActualPrice - PredictedPrice)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), difference = c((log_ActualPrice - predict_model_1), (log_ActualPrice - predict_model_2)))
ggplot(data=plotDataFrame, aes(x = log_ActualPrice, y = PredictedPrice, color = predictionType)) +
geom_point(, alpha = 0.5) +
geom_abline(slope=1, intercept=0) +
labs(title = "Predicted log(Price) vs Actual log(Price) for Both Models", y = "Predicted log(Price)", x = "Actual log(Price)")
nference(y = difference, x = predictionType, data = plotDataFrame, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", conf_level = 0.95, method = "theoretical", order = c("log(Lot.Area)","Lot.Area"))
load("ames_train.Rdata")
library(MASS)
library(BAS)
library(dplyr)
library(ggplot2)
library(devtools)
library(statsr)
ames_train <- ames_train %>%
mutate(age = 2017 - Year.Built)
ggplot(ames_train, aes(x=age), labs(title = "Distribution of House Age", y = "Number of Houses", x = "Age of the House in 2017")) + geom_histogram(bins=30, fill = 'Magenta')
summary(ames_train$age)
ames_train %>%
select(price, Neighborhood) %>%
group_by(Neighborhood) %>%
summarise(median = median(price), max = max(price), min = min(price), sd = sd(price)) %>% arrange(desc(median))
ggplot(ames_train, aes(y = price, x = reorder(Neighborhood, price, FUN = median), fill = Neighborhood), main = "Price among Neighborhoods", xlim= "Neighborhood", ylim="Price" )+geom_boxplot() + coord_flip()
apply(ames_train, 2, function(x) sum(is.na(x))) %>% sort %>% tail
model_lm = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm)
model_bic = bas.lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
summary(model_bic)
plot(model_lm)
outlierHouse <- ames_train[which(model_lm$residuals^2 == max((model_lm$residuals)^2)),]
outlierHouse
predictedPrice <- exp(model_lm$fitted.values[which(model_lm$residuals^2 == max((model_lm$residuals)^2))])
predictedPrice
model_bic = bas.lm(log(price) ~ log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train,
prior = "BIC",
modelprior = uniform(),
method = "MCMC" )
summary(model_bic)
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), difference = c((log_ActualPrice - predict_model_1), (log_ActualPrice - predict_model_2)))
ggplot(data=plotDataFrame, aes(x = log_ActualPrice, y = PredictedPrice, color = predictionType)) +
geom_point(, alpha = 0.5) +
geom_abline(slope=1, intercept=0) +
labs(title = "Predicted log(Price) vs Actual log(Price) for Both Models", y = "Predicted log(Price)", x = "Actual log(Price)")
inference(y = difference, x = predictionType, data = plotDataFrame, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", conf_level = 0.95, method = "theoretical", order = c("log(Lot.Area)","Lot.Area"))
model_lm_1 = lm(log(price)~Lot.Area+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
model_lm_2 = lm(log(price)~log(Lot.Area)+Land.Slope
+Year.Built+Year.Remod.Add
+Bedroom.AbvGr, data = ames_train)
summary(model_lm_1)
summary(model_lm_2)
plot(model_lm_1)
plot(model_lm_2)
log_ActualPrice <- log(ames_train$price)
predict_model_1 <- predict.lm(model_lm_1, ames_train)
predict_model_2 <- predict.lm(model_lm_2, ames_train)
plotDataFrame = data.frame(log_ActualPrice = log_ActualPrice, PredictedPrice = c(predict_model_1, predict_model_2), predictionType=c(rep(c("Lot.Area"),1000),rep(c("log(Lot.Area))"),1000)), difference = c((log_ActualPrice - predict_model_1), (log_ActualPrice - predict_model_2)))
ggplot(data=plotDataFrame, aes(x = log_ActualPrice, y = PredictedPrice, color = predictionType)) +
geom_point(, alpha = 0.5) +
geom_abline(slope=1, intercept=0) +
labs(title = "Predicted log(Price) vs Actual log(Price) for Both Models", y = "Predicted log(Price)", x = "Actual log(Price)")
