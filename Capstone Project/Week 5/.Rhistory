ggplot(ames_train) + geom_freqpoly(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_freqpoly(aes(log(price), ..density..), fill = "red", alpha = 0.2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_histogram(aes(price+1000), fill = "green", alpha = 0.2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly()
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price), color = "red")
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price), color = "red", binwidth = 5000)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price), color = "red", binwidth = 50)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price), color = "red", binwidth = 500000)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price), color = "red")
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_freqpoly(aes(price, ..density..), color = "red")
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
p1
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "red", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "red")
library(statsr)
library(dplyr)
library(BAS)
library(GGally)
library(ggplot2)
library(gridExtra)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "red", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "red")
grid.arrange(p1, p2, ncol =2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "red")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "green", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "red")
grid.arrange(p1, p2, ncol =2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "green")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "green", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "red")
grid.arrange(p1, p2, ncol =2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "magenta")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "green", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "red")
grid.arrange(p1, p2, ncol =2)
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "magenta")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "green", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "blue")
grid.arrange(p1, p2, ncol =2)
k<-colSums(is.na(ames_train))
missingval<-sort(k, decreasing = TRUE)[1:20]
barplot(missingval, main = "Missing values", las = 2, color = "magenta", alpha = 0.4 )
k<-colSums(is.na(ames_train))
missingval<-sort(k, decreasing = TRUE)[1:20]
ggplot() + geom_histogram(data = missingval, aes(missingval), main = "Missing values" )
k<-colSums(is.na(ames_train))
missingval<-sort(k, decreasing = TRUE)[1:20]
barplot(missingval, main = "Missing values", las = 2 )
ggplot(ames_train, aes(area, log(price)))+
geom_point() + geom_smooth(method=lm, se=TRUE)
ggplot(ames_train)+
geom_point(aes(area, log(price)), color = "red") + geom_smooth(method=lm, se=TRUE)
ggplot(ames_train aes(area, log(price)))+
ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red") + geom_smooth(method=lm, se=TRUE)
ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
ggplot(ames_train, aes(log(area), log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
p1 <- ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
p2 <- ggplot(ames_train, aes(log(area), log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
p2 <- ggplot(ames_train, aes(log(area), log(price)))+
geom_point(color = "green", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
grid.arrange(p1, p2, ncol=2)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area + Fireplace.Qu , data=ames_train )
summary(model.lm)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area + Fireplace.Qu , data=ames_train )
summary(model.lm)
anova(model.lm)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area , data=ames_train )
summary(model.lm)
anova(model.lm)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + log(Garage.Area) + log(Lot.Area) , data=ames_train )
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area , data=ames_train )
summary(model.lm)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area , data=ames_train )
summary(model.lm)
anova(model.lm)
#AIC
model.AIC <- stepAIC(lm.model, k = 2)
#AIC
model.AIC <- stepAIC(model.lm, k = 2)
model.AIC$anova
#AIC
model.AIC <- stepAIC(model.lm, k = 2)
model.AIC$anova
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image.bas(model.BIC, rotate = FALSE)
library(statsr)
library(dplyr)
library(BAS)
library(GGally)
library(ggplot2)
library(gridExtra)
#AIC
model.AIC <- stepAIC(model.lm, k = 2)
model.AIC$anova
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = FALSE)
#AIC
model.AIC <- bas.lm(model.lm,
prior = "AIC",
modelprior = uniform(),
data = ames_train)
model.AIC$anova
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
#AIC
model.AIC <- bas.lm(model.lm,
prior = "AIC",
modelprior = uniform(),
data = ames_train)
model.AIC$anova
image(model.AIC, rotate = TRUE)
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
#AIC
model.AIC <- bas.lm(model.lm,
prior = "AIC",
modelprior = uniform(),
data = ames_train)
model.AIC$anova
image(model.AIC, rotate = TRUE)
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
model.BIC$anova
image(model.BIC, rotate = TRUE)
#AIC
model.AIC <- bas.lm(model.lm,
prior = "AIC",
modelprior = uniform(),
data = ames_train)
summary(model.AIC)
image(model.AIC, rotate = TRUE)
#BIC
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
summary(model.BIC)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
summary(model.AIC)
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
summary(model.BIC)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
summary(model.BIC)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "AIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
summary(model.BIC)
image(model.BIC, rotate = TRUE)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
summary(model.BIC)
image(model.BIC, rotate = TRUE)
ggplot(data = NULL, aes(x = model.BIC$fitted, y = model.BIC$residuals)) +
geom_point(col = 'darkgreen') +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, 3), se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
model.BIC$fitted
model.BIC$fitted
pred_price <- predict(model.BIC,ames_train,estimator = "BMA")
ggplot(data = NULL, aes(x = model.BIC$fitted, y = model.BIC$residuals)) +
geom_point(col = 'darkgreen') +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, 3), se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
pred_price
coefs <- coef(model.BIC, estimator = "BMA")
coefs
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
coef(model.BIC, estimator = "BMA")
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
model.AIC$coefficients
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
coef(model.BIC, estimator = "BMA")
load("ames_train.Rdata")
library(statsr)
library(dplyr)
library(BAS)
library(GGally)
library(ggplot2)
library(gridExtra)
k<-colSums(is.na(ames_train))
missingval<-sort(k, decreasing = TRUE)[1:20]
barplot(missingval, main = "Missing values", las = 2 )
ames_train %>%
summarize(priceQ1 = quantile(price, 0.25), priceMEAN = mean(price), priceMEDIAN = median(price), priceQ3 = quantile(price, 0.75), priceIQR = IQR(price), priceSTDEV = sd(price))
p1 <- ggplot(ames_train) + geom_histogram(aes(price, ..density..), fill = "red", alpha = 0.2) + geom_density(aes(price, ..density..), color = "magenta")
p2 <- ggplot(ames_train) + geom_histogram(aes(log(price), ..density..), fill = "green", alpha = 0.2) + geom_density(aes(log(price), ..density..), color = "blue")
grid.arrange(p1, p2, ncol =2)
ggplot(ames_train,aes(factor(Overall.Qual),price))+geom_boxplot()+
geom_point(aes(color=factor(Overall.Qual)),position=position_dodge(width=0.5))
p1 <- ggplot(ames_train, aes(area, log(price)))+
geom_point(color = "red", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
p2 <- ggplot(ames_train, aes(log(area), log(price)))+
geom_point(color = "green", alpha = 0.2) + geom_smooth(method=lm, se=TRUE)
grid.arrange(p1, p2, ncol=2)
model.lm=lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond + Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area + Lot.Area , data=ames_train )
summary(model.lm)
anova(model.lm)
#step AIC
model.AIC <- stepAIC(model.lm, k =2)
model.AIC$anova
coef(model.AIC)
#BMA
model.BIC = bas.lm(model.lm,
prior = "BIC",
modelprior = uniform(),
data = ames_train)
image(model.BIC, rotate = TRUE)
coef(model.BIC, estimator = "BMA")
?coef
pred_price <- predict(model.BIC, ames_train, estimator = "BMA")
pred_price <- predict(model.BIC, ames_train, estimator = "BMA")
resid_price <- na.omit(ames_train$price - exp(pred_price$fit))
ggplot(data = NULL, aes(x = pred_price, y = resid_price)) +
geom_point(col = 'red', alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
resid_price <- (ames_train$price - exp(pred_price$fit))
ggplot(data = NULL, aes(x = pred_price, y = resid_price)) +
geom_point(col = 'red', alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
pred_price$fit
na.omit(pred_price$fit)
resid_price
na.omit(resid_price)
pred_price <- predict(model.BIC, ames_train, estimator = "BMA")$fit
View(priceDF)
pred_price
pred_price <- predict(model.BIC, ames_train, estimator = "BMA")
resid_price <- as.data.frame(actualPrice = ames_train$price, fittedPrice = pred_price$fit)
?as.data.frame()
resid_price <- as.data.frame(x = ames_train$price, fittedPrice = pred_price$fit)
View(resid_price)
resid_price <- data.frame(actualPrice = ames_train$price, fittedPrice = pred_price$fit)
View(resid_price)
resid_price <- data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))
View(resid_price)
resid_price <- data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))
resid_price <- na.omit(resid_price)
resid_price <- data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))
resid_price <- na.omit(resid_price)
resid_price <- data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))
resid_price <- na.omit(resid_price)
resid_price <- resid_price %>% mutate(residualPrice = actualPrice-fittedPrice)
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(residualPrice = actualPrice-fittedPrice)
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
gplot(data = NULL, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen') +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = NULL, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen') +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen') +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'magenta', alpha = 0.3) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'red')
resid_price <- na.omit(data.frame(actualPrice = ames_train$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'magenta', alpha = 0.3) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
rmse_train = sqrt(mean(resid_price$PriceResidual^2))
rmse = sqrt(mean(resid_price$PriceResidual^2))
paste("The within-sample root-mean-squared error is",format(rmse,digits=6), "dollars.")
load("ames_test.Rdata")
pred_test = predict(model.BIC, ames_test,estimator = "BMA")
resid_test = ames_test$price - exp(pred_test$fit)
rmse_test = sqrt(mean(resid_test^2))
rmse_test
View(resid_test)
resid_test = na.omit(ames_test$price - exp(pred_test$fit))
rmse_test = sqrt(mean(resid_test^2))
rmse_test
rmse = sqrt(mean(resid_price$PriceResidual^2))
rmse = sqrt(mean(resid_price$PriceResidual^2))
rmse
model.final = bas.lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond +
Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area +
Lot.Area,
data = ames_train,
prior="BIC",
modelprior=uniform())
coefs <- coef(model.final, estimator = "BMA")
plot(model.final, 3)
plot(model.final, 4)
pred_price <- predict(model.final, ames_test, estimator = "BMA")
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'green', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
+   geom_point(col = 'green', alpha = 0.2) +
+   geom_smooth(method = "lm", se = TRUE) +
+   geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
model.final = bas.lm(log(price) ~ log(area) + Overall.Qual + Overall.Cond +
Kitchen.Qual + Bsmt.Qual + Exter.Qual + Year.Built + Garage.Area +
Lot.Area,
data = ames_train,
prior="BIC",
modelprior=uniform())
plot(model.final, 4)
coefs <- coef(model.final, estimator = "BMA")
pred_price <- predict(model.final, ames_test, estimator = "BMA")
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'green', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
qqnorm(resid_price$PriceResidual, lty = 2)
qqline(resid_price$PriceResidualstd_resid)
rmse_final = sqrt(mean(resid_price$PriceResidual^2))
rmse_final = sqrt(mean(resid_price$PriceResidual^2))
rmse_final
load("ames_validation.Rdata")
load("ames_validation.Rdata")
price_valid = predict(model.final, ames_validation, estimator = "BMA", se.fit=TRUE)
price_valid = predict(model.final, ames_validation, estimator = "BMA")
price_valid = predict(model.final, ames_validation, estimator = "BMA")
resid_valid = ames_validation$price - exp(price_valid$fit)
rmse_valid = sqrt(mean(resid_valid^2))
price_valid = predict(model.final, ames_validation, estimator = "BMA")
ci_audience <- confint(price_valid, parm="pred")
price_valid = predict(model.final, ames_validation, estimator = "BMA", se.fit = TRUE)
price_valid = predict(model.final, ames_validation, estimator = "BMA")
resid_valid = ames_validation$price - exp(price_valid$fit)
rmse_valid = sqrt(mean(resid_valid^2))
resid_valid = ames_validation$price - exp(price_valid$fit)
rmse_valid = sqrt(mean(resid_valid^2))
rmse_valid
resid_valid = na.omit(ames_validation$price - exp(price_valid$fit))
rmse_valid = sqrt(mean(resid_valid^2))
rmse_valid
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
qqnorm(resid_price$PriceResidual, lty = 2)
qqline(resid_price$PriceResidualstd_resid)
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
qqnorm(resid_price$PriceResidual, lty = 2)
qqline(resid_price$PriceResidual, std_resid)
resid_price <- na.omit(data.frame(actualPrice = ames_test$price, fittedPrice = exp(pred_price$fit))) %>% mutate(PriceResidual = actualPrice-fittedPrice)
ggplot(data = resid_price, aes(x = fittedPrice, y = PriceResidual)) +
geom_point(col = 'darkgreen', alpha = 0.2) +
geom_smooth(method = "lm", se = TRUE) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black')
qqnorm(resid_price$PriceResidual, lty = 2)
qqline(resid_price$PriceResidual)
rmse_final = sqrt(mean(resid_price$PriceResidual^2))
rmse_final
